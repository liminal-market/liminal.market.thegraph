{"question1":"From the folder & file structure define for the project file, source path (where code is located), documentation folder path, test folder path. \n        DO NOT makeup value for JSON property \n        Return JSON scheme\n        {\n        project_file: string,\n        source_path: string,\n        documentation_path: string\n        test_path: string\n        }\n        Folders structure and files in root folder are\n        ###\n        .d.ts\n.env\n.git\n.gitignore\n.idea\nabis\nbuild\ngenerated\nnetworks.json\nnode_modules\npackage-lock.json\npackage.json\nREADME.md\nschema.graphql\nsrc\nsubgraph.yaml\ntests\ntsconfig.json\n        ###\n        ","question2":"Following is the project file (package.json). \nFrom the file determine the project name, entry file, cli file, repository url.\n\n        ### project file starts ###\n        {\n  \"name\": \"liminal.market.thegraph\",\n  \"description\": \"The code in this library create a subgraph using TheGraph protocol. It listens to contract event and uses TheGraph to index the events, allowing for easy query using TheGraph. The subgraph can be queried at https://thegraph.com/hosted-service/subgraph/liminal-market/\",\n  \"repository\": {\n    \"url\": \"https://github.com/liminal-market/liminal.market.thegraph\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/liminal-market/liminal.market.thegraph/issues\"\n  },\n  \"homepage\": \"https://liminal.market\",\n  \"license\": \"MIT\",\n  \"scripts\": {\n    \"codegen\": \"graph codegen\",\n    \"build\": \"graph build\",\n    \"deploy-mumbai\": \"graph deploy --network mumbai --node https://api.thegraph.com/deploy/ liminal-market/liminal-market-mumbai\",\n    \"deploy-matic\": \"graph deploy --network matic --node https://api.thegraph.com/deploy/ liminal-market/liminal-market-polygon\",\n    \"deploy-fuji\": \"graph deploy --network fuji --node https://api.thegraph.com/deploy/ liminal-market/liminal-market-fuji\",\n    \"create-local\": \"graph create --node http://localhost:8020/ liminal-market/order-executed\",\n    \"remove-local\": \"graph remove --node http://localhost:8020/ liminal-market/order-executed\",\n    \"deploy-local\": \"graph deploy --node http://localhost:8020/ --ipfs http://localhost:5001 liminal-market/order-executed\",\n    \"test\": \"graph test\",\n    \"coverage\": \"graph test -- -c\"\n  },\n  \"dependencies\": {\n    \"@graphprotocol/graph-cli\": \"^0.37.2\",\n    \"@graphprotocol/graph-ts\": \"0.29.1\",\n    \"matchstick-as\": \"^0.5.0\"\n  }\n}\n\n        ### project file ends ###       \n         \nFrom project name, try to identify app-specific config files from the file list.\nThis does NOT include project config files(e.g. package.json) or configs for dependencies. \nThe app-specific config file should be something like project_name.config or project_name.json. \nDO NOT makeup value for JSON property, set the value as empty if you cannot determine it\n           \n        ### folders and files starts ###\n        .d.ts\n.env\n.git\n.gitignore\n.idea\nabis\nbuild\ngenerated\nnetworks.json\nnode_modules\npackage-lock.json\npackage.json\nREADME.md\nschema.graphql\nsrc\nsubgraph.yaml\ntests\ntsconfig.json\n        ### folders and files ends ###\n        \n        Return json \n        {\n        project_name: string,\n        entry_file: string,\n        cli_file: string,\n        config_files: string[]\n        repository_url : string\n        }\n        "}