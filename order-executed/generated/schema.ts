// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  TypedMap,
  Entity,
  Value,
  ValueKind,
  store,
  Bytes,
  BigInt,
  BigDecimal
} from "@graphprotocol/graph-ts";

export class OrderExecutedEntity extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id != null, "Cannot save OrderExecutedEntity entity without an ID");
    if (id) {
      assert(
        id.kind == ValueKind.STRING,
        `Entities of type OrderExecutedEntity must have an ID of type String but the id '${id.displayData()}' is of type ${id.displayKind()}`
      );
      store.set("OrderExecutedEntity", id.toString(), this);
    }
  }

  static load(id: string): OrderExecutedEntity | null {
    return changetype<OrderExecutedEntity | null>(
      store.get("OrderExecutedEntity", id)
    );
  }

  get id(): string {
    let value = this.get("id");
    return value!.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get recipient(): Bytes {
    let value = this.get("recipient");
    return value!.toBytes();
  }

  set recipient(value: Bytes) {
    this.set("recipient", Value.fromBytes(value));
  }

  get symbol(): string {
    let value = this.get("symbol");
    return value!.toString();
  }

  set symbol(value: string) {
    this.set("symbol", Value.fromString(value));
  }

  get qty(): BigInt {
    let value = this.get("qty");
    return value!.toBigInt();
  }

  set qty(value: BigInt) {
    this.set("qty", Value.fromBigInt(value));
  }

  get filledQty(): BigInt {
    let value = this.get("filledQty");
    return value!.toBigInt();
  }

  set filledQty(value: BigInt) {
    this.set("filledQty", Value.fromBigInt(value));
  }

  get filledAvgPrice(): BigInt {
    let value = this.get("filledAvgPrice");
    return value!.toBigInt();
  }

  set filledAvgPrice(value: BigInt) {
    this.set("filledAvgPrice", Value.fromBigInt(value));
  }

  get side(): string {
    let value = this.get("side");
    return value!.toString();
  }

  set side(value: string) {
    this.set("side", Value.fromString(value));
  }

  get filledAt(): BigInt {
    let value = this.get("filledAt");
    return value!.toBigInt();
  }

  set filledAt(value: BigInt) {
    this.set("filledAt", Value.fromBigInt(value));
  }

  get commission(): BigInt {
    let value = this.get("commission");
    return value!.toBigInt();
  }

  set commission(value: BigInt) {
    this.set("commission", Value.fromBigInt(value));
  }

  get aUsdBalance(): BigInt {
    let value = this.get("aUsdBalance");
    return value!.toBigInt();
  }

  set aUsdBalance(value: BigInt) {
    this.set("aUsdBalance", Value.fromBigInt(value));
  }
}
